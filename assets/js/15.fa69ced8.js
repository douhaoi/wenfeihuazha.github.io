(window.webpackJsonp=window.webpackJsonp||[]).push([[15],{365:function(t,a,v){"use strict";v.r(a);var s=v(42),_=Object(s.a)({},(function(){var t=this,a=t.$createElement,v=t._self._c||a;return v("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[v("h1",{attrs:{id:"关于性能优化"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#关于性能优化"}},[t._v("#")]),t._v(" 关于性能优化")]),t._v(" "),v("h2",{attrs:{id:"介绍"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#介绍"}},[t._v("#")]),t._v(" 介绍")]),t._v(" "),v("ul",[v("li",[t._v("性能优化是不可避免的")]),t._v(" "),v("li",[t._v("哪些内容可以看做是性能优化")]),t._v(" "),v("li",[t._v("无处不在的前端性能优化")])]),t._v(" "),v("h2",{attrs:{id:"javascript语言优化"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#javascript语言优化"}},[t._v("#")]),t._v(" JavaScript语言优化")]),t._v(" "),v("h3",{attrs:{id:"内存管理"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#内存管理"}},[t._v("#")]),t._v(" 内存管理")]),t._v(" "),v("h4",{attrs:{id:"介绍-2"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#介绍-2"}},[t._v("#")]),t._v(" 介绍")]),t._v(" "),v("ul",[v("li",[t._v("内存:由可读写单元组成,便是一片可操作性空间")]),t._v(" "),v("li",[t._v("管理:人为的去操作一片空间的申请,使用和释放")]),t._v(" "),v("li",[t._v("内存管理: 开发者主动申请空间,使用空间,释放空间")]),t._v(" "),v("li",[t._v("管理流程:申请 -- 使用 -- 释放")])]),t._v(" "),v("h4",{attrs:{id:"javascript中的内存管理"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#javascript中的内存管理"}},[t._v("#")]),t._v(" JavaScript中的内存管理")]),t._v(" "),v("ul",[v("li",[t._v("申请内存空间")]),t._v(" "),v("li",[t._v("使用内存空间")]),t._v(" "),v("li",[t._v("释放内存空间")])]),t._v(" "),v("h3",{attrs:{id:"垃圾回收与常见gc算法"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#垃圾回收与常见gc算法"}},[t._v("#")]),t._v(" 垃圾回收与常见GC算法")]),t._v(" "),v("h4",{attrs:{id:"javascript中的垃圾"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#javascript中的垃圾"}},[t._v("#")]),t._v(" JavaScript中的垃圾")]),t._v(" "),v("ul",[v("li",[t._v("JavaScript 中内存管理是自动的")]),t._v(" "),v("li",[t._v("对象不再被引用时是垃圾")]),t._v(" "),v("li",[t._v("对象不能从根上访问到时是垃圾")])]),t._v(" "),v("h4",{attrs:{id:"javascript中的可达对象"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#javascript中的可达对象"}},[t._v("#")]),t._v(" JavaScript中的可达对象")]),t._v(" "),v("ul",[v("li",[t._v("可以访问到的对象就是可达对象(引用,作用域链)")]),t._v(" "),v("li",[t._v("可达的标准就是从根出发是否能够被找到")]),t._v(" "),v("li",[t._v("JavaScript中的根就可以理解为是全局变量对象")])]),t._v(" "),v("h5",{attrs:{id:"介绍-3"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#介绍-3"}},[t._v("#")]),t._v(" 介绍")]),t._v(" "),v("ul",[v("li",[t._v("GC 就是垃圾回收机制的简写")]),t._v(" "),v("li",[t._v("GC 可以找到内存中的垃圾,并释放和回收空间")]),t._v(" "),v("li",[t._v("算法就是工作时查找和回收所遵循的规则")])]),t._v(" "),v("h5",{attrs:{id:"常见-gc-算法"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#常见-gc-算法"}},[t._v("#")]),t._v(" 常见 GC 算法")]),t._v(" "),v("h6",{attrs:{id:"引用计数"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#引用计数"}},[t._v("#")]),t._v(" 引用计数")]),t._v(" "),v("ul",[v("li",[t._v("核心思想: 设置引用数,判断当前引用数是否为0")]),t._v(" "),v("li",[t._v("引用计数器")]),t._v(" "),v("li",[t._v("当引用关系改变时修改引用数字")]),t._v(" "),v("li",[t._v("引用数字为0时立即回收")])]),t._v(" "),v("div",{staticClass:"language-js line-numbers-mode"},[v("pre",{pre:!0,attrs:{class:"language-js"}},[v("code",[v("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" user1 "),v("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),v("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("age"),v("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),v("span",{pre:!0,attrs:{class:"token number"}},[t._v("11")]),v("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),v("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" user2 "),v("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),v("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("age"),v("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),v("span",{pre:!0,attrs:{class:"token number"}},[t._v("22")]),v("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),v("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" user3 "),v("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),v("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("age"),v("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),v("span",{pre:!0,attrs:{class:"token number"}},[t._v("33")]),v("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n"),v("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" nameList "),v("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),v("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("user1"),v("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("age"),v("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("user2"),v("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("age"),v("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("user3"),v("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("age"),v("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n"),v("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// user1 user2 user3 仍然被引用 所以不会被回收")]),t._v("\n\n\n"),v("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),v("span",{pre:!0,attrs:{class:"token function"}},[t._v("fn")]),v("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),v("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),v("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),v("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" num1 "),v("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),v("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),v("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),v("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" num2 "),v("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),v("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),v("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),v("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n"),v("span",{pre:!0,attrs:{class:"token function"}},[t._v("fn")]),v("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),v("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),v("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),v("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//在执行后 内部num1 num2 就会被回收")]),t._v("\n")])]),t._v(" "),v("div",{staticClass:"line-numbers-wrapper"},[v("span",{staticClass:"line-number"},[t._v("1")]),v("br"),v("span",{staticClass:"line-number"},[t._v("2")]),v("br"),v("span",{staticClass:"line-number"},[t._v("3")]),v("br"),v("span",{staticClass:"line-number"},[t._v("4")]),v("br"),v("span",{staticClass:"line-number"},[t._v("5")]),v("br"),v("span",{staticClass:"line-number"},[t._v("6")]),v("br"),v("span",{staticClass:"line-number"},[t._v("7")]),v("br"),v("span",{staticClass:"line-number"},[t._v("8")]),v("br"),v("span",{staticClass:"line-number"},[t._v("9")]),v("br"),v("span",{staticClass:"line-number"},[t._v("10")]),v("br"),v("span",{staticClass:"line-number"},[t._v("11")]),v("br"),v("span",{staticClass:"line-number"},[t._v("12")]),v("br"),v("span",{staticClass:"line-number"},[t._v("13")]),v("br"),v("span",{staticClass:"line-number"},[t._v("14")]),v("br")])]),v("ul",[v("li",[t._v("优点:")])]),t._v(" "),v("blockquote",[v("ol",[v("li",[t._v("发现垃圾时立即回收")]),t._v(" "),v("li",[t._v("最大限度减少程序暂停")])])]),t._v(" "),v("ul",[v("li",[t._v("缺点:")])]),t._v(" "),v("blockquote",[v("ol",[v("li",[t._v("无法回收循环引用的对象")]),t._v(" "),v("li",[t._v("时间开销大")])])]),t._v(" "),v("h6",{attrs:{id:"标记清除"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#标记清除"}},[t._v("#")]),t._v(" 标记清除")]),t._v(" "),v("ul",[v("li",[t._v("原理")])]),t._v(" "),v("blockquote",[v("ol",[v("li",[t._v("核心思想 : 分标记和清楚二个阶段完成")]),t._v(" "),v("li",[t._v("遍历所有对象找标记活动对象")]),t._v(" "),v("li",[t._v("遍历所有对象清楚没有标记的对象")]),t._v(" "),v("li",[t._v("回收相应的空间")])])]),t._v(" "),v("ul",[v("li",[t._v("优点")])]),t._v(" "),v("blockquote",[v("ol",[v("li",[t._v("解决循环引用对象的问题")])])]),t._v(" "),v("ul",[v("li",[t._v("缺点")])]),t._v(" "),v("blockquote",[v("ol",[v("li",[t._v("释放后地址不连续(空间碎片化)")]),t._v(" "),v("li",[t._v("不能立即回收垃圾对象")])])]),t._v(" "),v("h6",{attrs:{id:"标记整理"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#标记整理"}},[t._v("#")]),t._v(" 标记整理")]),t._v(" "),v("ul",[v("li",[t._v("原理")])]),t._v(" "),v("blockquote",[v("ol",[v("li",[t._v("标记整理可以看做是标记清除的增强")]),t._v(" "),v("li",[t._v("标记阶段的操作和标记清除一致")]),t._v(" "),v("li",[t._v("清除阶段会先执行整理,移动对象位置")])])]),t._v(" "),v("ul",[v("li",[t._v("优点:")])]),t._v(" "),v("blockquote",[v("ol",[v("li",[t._v("减少碎片化空间")])])]),t._v(" "),v("ul",[v("li",[t._v("缺点")])]),t._v(" "),v("blockquote",[v("ol",[v("li",[t._v("不能立即回收垃圾对象")])])]),t._v(" "),v("h3",{attrs:{id:"v8-引擎的垃圾回收"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#v8-引擎的垃圾回收"}},[t._v("#")]),t._v(" V8 引擎的垃圾回收")]),t._v(" "),v("ul",[v("li",[t._v("认识V8")])]),t._v(" "),v("blockquote",[v("ol",[v("li",[t._v("V8 是一款主流的JavaScript执行引擎")]),t._v(" "),v("li",[t._v("V8 采用即时编译")]),t._v(" "),v("li",[t._v("V8 内存设限")])])]),t._v(" "),v("ul",[v("li",[t._v("V8 垃圾回收策略")])]),t._v(" "),v("blockquote",[v("ol",[v("li",[t._v("采用分代回收的思想")]),t._v(" "),v("li",[t._v("内存分为新生代,老生代")]),t._v(" "),v("li",[t._v("针对不同对象采用不同算法")])])]),t._v(" "),v("ul",[v("li",[t._v("V8 中常用的 GC 算法")])]),t._v(" "),v("blockquote",[v("ol",[v("li",[t._v("分代回收")]),t._v(" "),v("li",[t._v("空间赋值")]),t._v(" "),v("li",[t._v("标记清除")]),t._v(" "),v("li",[t._v("标记整理")]),t._v(" "),v("li",[t._v("标记增量")])])]),t._v(" "),v("ul",[v("li",[t._v("V8 新生代对象")])]),t._v(" "),v("blockquote",[v("ol",[v("li",[t._v("V8 内存空间一分为二")]),t._v(" "),v("li",[t._v("小空间用于存储新生代对象(32M|16M)")]),t._v(" "),v("li",[t._v("新生代指的是存活时间较短的对象(如局部变量)")])])]),t._v(" "),v("ul",[v("li",[t._v("V8 如何回收新生代对象")])]),t._v(" "),v("blockquote",[v("ol",[v("li",[t._v("回收过程采用复制算法 + 标记整理")]),t._v(" "),v("li",[t._v("新生代内存区分为二个等大小空间 (From | to)")]),t._v(" "),v("li",[t._v("使用空间为 From , 空闲空间为 To")]),t._v(" "),v("li",[t._v("活动对象存储于 From 空间")]),t._v(" "),v("li",[t._v("标记整理后将活动对象拷贝值 To")]),t._v(" "),v("li",[t._v("From 与 To 交换空间完成释放")])])]),t._v(" "),v("ul",[v("li",[t._v("V8 如何回收新生代对象细节说明")])]),t._v(" "),v("blockquote",[v("ol",[v("li",[t._v("拷贝过程中可能出现晋升")]),t._v(" "),v("li",[t._v("晋升就是将新生代对象移动至老生代")]),t._v(" "),v("li",[t._v("一轮GC还存活的新生代需要晋升")]),t._v(" "),v("li",[t._v("To 空间的使用率超过25%")])])]),t._v(" "),v("ul",[v("li",[t._v("V8 老年代对象")])]),t._v(" "),v("blockquote",[v("ol",[v("li",[t._v("老年代对象存放在右侧老生代区域")]),t._v(" "),v("li",[t._v("64位操作系统 1.4G,32G操作系统700M")]),t._v(" "),v("li",[t._v("老年代对象就是指存活时间较长的对象")])])]),t._v(" "),v("ul",[v("li",[t._v("V8 老年代对象回收实现")])]),t._v(" "),v("blockquote",[v("ol",[v("li",[t._v("主要采用标记清除,标记整理,增量标记算法")]),t._v(" "),v("li",[t._v("首先使用标记清除完成垃圾空间的回收")]),t._v(" "),v("li",[t._v("采用标记整理进行空间优化")]),t._v(" "),v("li",[t._v("采用增量标记进行效率优化")])])]),t._v(" "),v("ul",[v("li",[t._v("新生代区域和老年代区域细节对比")])]),t._v(" "),v("blockquote",[v("ol",[v("li",[t._v("新生代区域垃圾回收使用空间换时间")]),t._v(" "),v("li",[t._v("老生代区域垃圾回收不适合复制算法")])])]),t._v(" "),v("ul",[v("li",[t._v("总结")])]),t._v(" "),v("blockquote",[v("ol",[v("li",[t._v("V8 是一款主流的JavaScript执行引擎")]),t._v(" "),v("li",[t._v("V8 内存设置上限")]),t._v(" "),v("li",[t._v("V8 采用基于分代回收思想实现垃圾回收")]),t._v(" "),v("li",[t._v("V8 内存分为新生代和老生代")]),t._v(" "),v("li",[t._v("V8 垃圾回收常见 GC 算法")])])]),t._v(" "),v("h3",{attrs:{id:"performance-工具"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#performance-工具"}},[t._v("#")]),t._v(" Performance 工具")]),t._v(" "),v("ul",[v("li",[t._v("为什么使用 Performance")])]),t._v(" "),v("blockquote",[v("ol",[v("li",[t._v("GC 的目的是为了实现内存空间的良性循环")]),t._v(" "),v("li",[t._v("良性循环的基石是合理使用")]),t._v(" "),v("li",[t._v("时刻关注才能确定是否合理")]),t._v(" "),v("li",[t._v("Performance 提供多种监控方法")])])]),t._v(" "),v("p",[t._v("总结: "),v("strong",[t._v("通过Performance时刻监控内存")])]),t._v(" "),v("ul",[v("li",[t._v("使用步骤")])]),t._v(" "),v("blockquote",[v("ol",[v("li",[t._v("打开浏览器输入目标网站")]),t._v(" "),v("li",[t._v("进入开发人员工具面板,选择性能")]),t._v(" "),v("li",[t._v("开启录制功能,访问具体界面")]),t._v(" "),v("li",[t._v("执行用户行为,一段时间后停止录制")]),t._v(" "),v("li",[t._v("分析界面中记录的内存信息")])])]),t._v(" "),v("ul",[v("li",[t._v("出现问题的体现")])]),t._v(" "),v("blockquote",[v("ol",[v("li",[t._v("页面出现延迟加载或经常性暂停")]),t._v(" "),v("li",[t._v("页面持续性出现糟糕的性能")]),t._v(" "),v("li",[t._v("页面的性能随时间延长越来越差")])])])])}),[],!1,null,null,null);a.default=_.exports}}]);